{"version":3,"sources":["Component/PokemonCard.js","Component/Filter.js","Component/Pagination.js","Redux/Reducers/Pokemon.js","Redux/Reducers/PokemonList.js","Redux/Reducers/FindPokemon.js","Redux/Reducers/index.js","constants.js","Redux/Store.js","Component/PokemonList.js","Component/Search.js","Layout/NavBar.js","Component/Pokemon.js","App.js","serviceWorker.js","index.js"],"names":["PokemonCard","state","pokemonIndex","pokemonImage","url","this","props","split","length","setState","className","to","src","pokmname","charAt","toUpperCase","substr","Component","Filter","types","map","type","key","onClick","event","filterTypes","value","connect","totalCountPokemon","PokemonList","currentPage","pageSize","countOfPortion","pageNumbers","totalButton","Math","ceil","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","i","push","filter","page","p","nextPage","initialState","name","imgUrl","hp","attack","defense","speed","specialAttack","specialDefense","description","pokemon","rootReducer","combineReducers","Pokemon","payload","FindPokemon","isInput","middleware","composeWithDevTools","applyMiddleware","thunk","store","createStore","replace","dispatch","axios","get","then","res","data","bind","find_pokemon_types","isFilter","count","target","resp","pokemons","filtered","pokm","Search","handleChange","indexOf","toLowerCase","placeholder","onChange","height","Navbar","match","params","specialUrl","rest","special_rest","sprites","front_default","stats","stat","base_stat","flavor_text_entries","flavor","language","flavor_text","max","App","NavBar","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.17c71e49.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nclass PokemonCard extends Component {\n\n    state ={\n        pokemonIndex: '',\n        pokemonImage: ''\n    }\n\n    componentDidMount(){\n       const { url } =  this.props;\n       const pokemonIndex = url.split('/')[url.split('/').length-2];\n       const pokemonImage = `https://github.com/PokeAPI/sprites/blob/master/sprites/pokemon/${pokemonIndex}.png?raw=true`;\n       this.setState({\n           pokemonIndex,\n           pokemonImage\n       });\n    }\n\n    render (){\n        return(\n            <div className='pokemon-card' >\n                <div className='card-id' >\n                <p>{this.state.pokemonIndex}</p>\n                    </div>\n                     <Link to = {`pokemon/${this.state.pokemonIndex}`}>\n                     <div className='card-image' >\n                    <img src={this.state.pokemonImage} />\n                    </div>\n                    </Link>\n                    <div className='card-name' >\n                <h3>{this.props.pokmname.charAt(0).toUpperCase() + this.props.pokmname.substr(1)}</h3>\n                </div>\n        </div>\n        )\n    }\n}\n\nexport default PokemonCard;","import React, { Component } from 'react'\n\nclass Filter extends Component{\n\n    render(){\n        return(\n            <div> \n               {this.props.types ? (\n                   <div className = 'filter-div' >\n                       <ul>\n                       {this.props.types.map(type =>{\n                           return( \n                               <li key = { type }>\n                               <label>\n                                   <input \n                                        type='checkbox'\n                                        onClick = {event => {\n                                            this.props.filterTypes(event)\n                                        }}\n                                        value = { type }\n                                   />\n                                   { type.charAt(0).toUpperCase() + type.substr(1) }\n                                   </label>\n                                </li>                              \n                           )\n                       })}\n                       </ul>\n                       </div>\n               ) : (\n                   <h1></h1>\n               )}\n            </div>\n        )\n    }\n}\n\nexport default Filter;","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nconst Pagination = ( props ) => {\n\n    const pageNumbers = [];\n    const totalButton = Math.ceil(props.totalCountPokemon / props.pageSize);\n    const countOfPortion = Math.ceil(totalButton / props.countOfPortion);\n    const [ portionNumber, setPortionNumber] = useState(1);\n    const leftPortionPageNumber = (portionNumber - 1) * countOfPortion + 1;\n    const rightPortionPageNumber = portionNumber * countOfPortion;\n\n    for( let i = 0; i <= totalButton; i++){\n        pageNumbers.push(i);\n    }\n\n    return(\n        <div className = 'pagination-div'>\n            <span className = 'pagination-span-back'>\n            { portionNumber > 1 && \n                <button onClick = { () => setPortionNumber(portionNumber - 1) } >Back</button> }\n            </span>\n            <span>\n            {pageNumbers.filter(page => \n                page >= leftPortionPageNumber && page <= rightPortionPageNumber)\n                .map((p) => {\n                    return <span className = 'pagination-span-button' key = { p }>\n                        <button className = { props.currentPage === p && 'active' } key = { p } \n                        onClick = { () => props.nextPage(p) } > {p} </button>\n                        </span>\n            })}\n            </span>\n            <span className = 'pagination-span-next'>\n            { countOfPortion > portionNumber && \n                <button onClick = { () => setPortionNumber(portionNumber + 1) } >Next</button> } \n                </span>\n            </div>\n    )\n}\n\nexport default connect(\n    state => ({\n        totalCountPokemon: state.PokemonList.totalCountPokemon,\n        currentPage: state.PokemonList.currentPage,\n        pageSize: state.PokemonList.pageSize,\n        countOfPortion: state.PokemonList.countOfPortion\n    })\n)(Pagination)","import { POKEMON_NAME, POKEMON_IMG_URL, POKEMON_HP, POKEMON_ATTACK, POKEMON_DEFENSE, POKEMON_SPEED,\n    POKEMON_SPECIAL_ATTACK, POKEMON_SPECIAL_DEFENSE, POKEMON_DESCRIPTION, POKEMON_TYPES } from '../../constants.js'\n\nconst initialState = {\n    name: '',\n    imgUrl: '',\n    hp: '',\n    attack: '',\n    defense: '',\n    speed: '',\n    specialAttack: '',\n    specialDefense: '',\n    description: '',\n    types: [ ]\n}\n\nexport default (state = initialState, { type, payload } ) => {\n    switch (type) {\n            case POKEMON_NAME:\n                return {\n                    ...state,\n                    name: payload\n                }\n        case POKEMON_IMG_URL :\n            return {\n                ...state,\n                imgUrl: payload\n            }\n        case POKEMON_HP :\n            return {\n                ...state,\n                hp: payload\n            }\n        case POKEMON_ATTACK :\n            return {\n                ...state,\n                attack: payload\n            }\n        case POKEMON_DEFENSE :\n            return {\n                ...state,\n                defense: payload\n            }\n        case POKEMON_SPEED :\n            return {\n                ...state,\n                speed: payload\n            }\n        case POKEMON_SPECIAL_ATTACK :\n            return {\n                ...state,\n                specialAttack: payload\n            }\n        case POKEMON_SPECIAL_DEFENSE:\n            return {\n                ...state,\n                specialDefense: payload\n            }\n        case POKEMON_DESCRIPTION :\n            return {\n                ...state,\n                description: payload\n            }\n        case POKEMON_TYPES :\n            return {\n                ...state,\n                types: payload\n            }\n        default: \n            return state\n    }\n}","import { ADD_POKEMONS, TOTAL_COUNT_POKEMONS, PAGINATION, COUNT_OF_PORTION, CURRENT_PAGE,\n    FILTER_POKEMONS } from '../../constants'\n\nconst initialState = {\n    pokemon: null,\n    pageSize: 15,\n    totalCountPokemon: null,\n    currentPage: 1,\n    countOfPortion: 6\n  }\n  \nexport default (state = initialState, { type, payload } ) => {\n    switch (type){\n      case ADD_POKEMONS :\n        return{\n          ...state,\n          pokemon: payload\n        }\n      case PAGINATION :\n        return{\n          ...state,\n          pokemon: payload\n        }\n      case TOTAL_COUNT_POKEMONS :\n        return{\n          ...state,\n          totalCountPokemon: payload\n        }\n      case COUNT_OF_PORTION :\n        return{\n          ...state,\n          countOfPortion: payload\n        }\n      case CURRENT_PAGE :\n        return {\n          ...state,\n          currentPage: payload\n        }\n      default: \n          return state\n    }\n  }","import { FIND_POKEMONS } from '../../constants'\n\nconst initialState = { };\n\nexport default (state = initialState, { type, payload, isInput } ) => {\n    switch (type){\n        case FIND_POKEMONS :\n          return{\n            ...state,\n            payload, \n            isInput\n          }\n        default: \n            return state\n      }\n}","import { combineReducers } from 'redux'\nimport Pokemon from './Pokemon'\nimport PokemonList from './PokemonList'\nimport FindPokemon from './FindPokemon'\n\nconst rootReducer = combineReducers({\n    Pokemon, PokemonList, FindPokemon\n})\n\nexport default rootReducer;","export const ADD_POKEMONS = 'ADD_POKEMONS';\nexport const POKEMON_NAME = 'POKEMON_NAME';\nexport const POKEMON_IMG_URL = 'POKEMON_IMG_URL';\nexport const POKEMON_HP = 'POKEMON_HP';\nexport const POKEMON_ATTACK = 'POKEMON_ATTACK';\nexport const POKEMON_DEFENSE = 'POKEMON_DEFENSE';\nexport const POKEMON_SPEED = 'POKEMON_SPEED';\nexport const POKEMON_SPECIAL_ATTACK = 'POKEMON_SPECIAL_ATTACK';\nexport const POKEMON_SPECIAL_DEFENSE = 'POKEMON_SPECIAL_DEFENSE';\nexport const POKEMON_DESCRIPTION = 'POKEMON_DESCRIPTION';\nexport const POKEMON_TYPES = 'POKEMON_TYPES';\nexport const FIND_POKEMONS = 'POKEMON_FIND';\nexport const TOTAL_COUNT_POKEMONS = 'TOTAL_COUNT_POKEMON';\nexport const PAGINATION = 'PAGINATION';\nexport const COUNT_OF_PORTION = 'COUNT_OF_PORTION';\nexport const CURRENT_PAGE = 'CURRENT_PAGE';","import { applyMiddleware, createStore } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport  rootReducer  from './Reducers/index'\n\nconst middleware = composeWithDevTools(applyMiddleware(thunk));\nconst store = createStore( rootReducer, middleware );\n\nexport default store;","import React, { Component } from 'react'\nimport PokemonCard from './PokemonCard'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport { ADD_POKEMONS, PAGINATION, TOTAL_COUNT_POKEMONS, CURRENT_PAGE, FILTER_POKEMONS } from '../constants'\nimport Filter from './Filter'\nimport Pagination from './Pagination'\nimport store from '../Redux/Store'\n\nclass PokemonList extends Component {\n\n    constructor(props){\n        super(props);\n        this.filterTypes = this.filterTypes.bind(this);\n        this.state = {\n        find_pokemon_types: null,\n        isFilter: true,\n        count: null,\n        types: [\n            'fire','water','ice','dragon','fighting',\n            'flying','grass','rock','ground','fairy',\n            'poison','dark','ghost','electric',\n            'steel','bug','normal','psychic'\n        ]\n    }\n}\n\n    filterTypes (event) {\n        const pokemon_types = event.target;\n        const { value } = pokemon_types; \n        let url = `https://pokeapi.co/api/v2/type/${value}/`;\n\n        axios.get(url).then((resp) => {\n            this.setState({\n                find_pokemon_types: resp.data.pokemon,\n                isFilter: false\n            })\n            /*store.dispatch((dispatch) => {\n                console.log('NY VOT: ', resp.data.pokemon);\n                dispatch({\n                    type: FILTER_POKEMONS,\n                    payload: resp.data.pokemon\n                });\n            })*/\n        })\n    }\n\n    nextPage = (event) => {\n        let url = `https://pokeapi.co/api/v2/pokemon/?offset=0&limit=15`;\n        url = url.replace(/offset=\\d+/, `offset=${(event * 15) - 15}`);\n\n        store.dispatch((dispatch) => {\n            axios.get(url)\n            .then((res) => {\n                dispatch({\n                    type: PAGINATION,\n                    payload: res.data['results']\n                });\n                dispatch({\n                    type: CURRENT_PAGE,\n                    payload: event\n                })\n            })\n        })\n    }\n    \n    async componentDidMount(){\n        let url = `https://pokeapi.co/api/v2/pokemon/?offset=0&limit=15`;\n        url = url.replace(/offset=\\d+/, `offset=${(this.props.currentPage * 15) - 15}`);\n        await axios.get(url)\n        .then((res) => {\n            store.dispatch((dispatch) => {\n                dispatch({\n                    type: ADD_POKEMONS,\n                    payload: res.data['results']\n                });\n                dispatch({\n                    type: TOTAL_COUNT_POKEMONS,\n                    payload: res.data.count\n                })\n            })\n        })\n    }\n\n    render(){        \n\n        const { pokemons, filtered } = this.props;\n\n        return(            \n            <div className = 'wrapper'>  \n                <Filter filterTypes = { this.filterTypes } types = { this.state.types } />\n                <div>\n                {this.state.isFilter ? (\n                    <div>\n                        {filtered.isInput ? (\n                    <div>\n                        {filtered.payload ? (\n                            <div className='card' >\n                                {filtered.payload.map(pokm => {\n                                    return  <PokemonCard pokmname={pokm.name} url={ pokm.url } key={pokm.name} />\n                                    \n                                })}\n                            \n                            </div>\n                            ) : (\n                                <h1>Sorry, there is no such pokemon</h1>\n                        )}\n                            </div>\n                    ) : (\n                        <div>\n                            {pokemons ? (\n                                <div className='card' >\n                                    {pokemons.map(pokm => {\n                                       return  <PokemonCard pokmname={pokm.name} url={ pokm.url } key={pokm.name} />\n                                    })}\n                                </div>\n                            ) : (\n                                <h1>Loading pokemons...</h1>\n                        )}\n                    </div>\n                )}\n                    </div>\n                ) : (\n                    <div>\n                       {this.state.find_pokemon_types ? (\n                          <div className='card' >\n                          {this.state.find_pokemon_types.map(pokm => {\n                             return  <PokemonCard pokmname={pokm.pokemon.name} url={ pokm.pokemon.url } \n                                        key={pokm.pokemon.name} />\n                          })}\n                      </div>\n                       ) : (\n                            <div>\n                                {filtered.isInput ? (\n                            <div>\n                                {filtered.payload ? (\n                                <div className='card' >\n                                    {filtered.payload.map(pokm => {\n                                        return  <PokemonCard pokmname={pokm.name} url={ pokm.url } key={pokm.name} />\n                                    })}\n                                </div>\n                                ) : (\n                                    <h1>Sorry, there is no such pokemon</h1>\n                            )}\n                            </div>\n                         ) : (\n                        <div>\n                            {pokemons ? (\n                                <div className='card' >\n                                    {pokemons.map(pokm => {\n                                       return  <PokemonCard pokmname={pokm.name} url={ pokm.url } key={pokm.name} />\n                                    })}\n                                </div>\n                            ) : (\n                                <h1>Loading pokemons...</h1>\n                        )}\n                    </div>\n                )}\n                    </div>\n                       )}\n                    </div>\n                )}\n                </div>\n                <div>\n                <Pagination currentPage = { this.props.currentPage } nextPage={ this.nextPage } />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    state =>({\n      pokemons: state.PokemonList.pokemon,\n      filtered: state.FindPokemon,\n      currentPage: state.PokemonList.currentPage\n    })\n  )(PokemonList)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport store from '../Redux/Store'\nimport { FIND_POKEMONS} from '../constants'\n\nclass Search extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            value: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState(({\n            value: event.target.value\n        }));\n\n        const filtered = this.props.pokemons.filter(pokm =>{\n            return pokm.name.indexOf(event.target.value.toLowerCase()) !== -1;\n        });\n\n        let isInput = false;\n        \n        if(event.target.value !== ''){\n            isInput = true;\n        }\n            else{\n                isInput = false;\n            }\n       \n        store.dispatch((dispatch) => {\n            dispatch({\n                type: FIND_POKEMONS,\n                payload: filtered,\n                isInput: isInput\n            })\n        })\n    }\n\n    render(){\n        return( \n            <div className = ' search-div '>\n                <div>\n            <input\n            className = 'search-input'\n            type = 'text'\n            placeholder = 'Enter name of pokemon...'\n            value = { this.state.value }\n            onChange = { this.handleChange }\n            />\n            </div>\n            <div className = ' search-div-icon '>\n            <img src='search.png' height='18px' />\n            </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    state=>({\n        pokemons: state.PokemonList.pokemon\n    })\n)(Search)","import React from 'react'\nimport Search from '../../src/Component/Search'\n \nfunction Navbar(){\n    return(\n        <div className='wrapper-navbar' >\n            <div>\n                <p className='navbar-text' >Pokemons</p>\n            </div>\n\n                <Search />\n                \n        </div>\n    )\n}\n\nexport default Navbar;","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { connect } from 'react-redux';\nimport store from '../Redux/Store'\nimport { POKEMON_NAME, POKEMON_IMG_URL, POKEMON_HP, POKEMON_ATTACK, POKEMON_DEFENSE, POKEMON_SPEED,\n    POKEMON_SPECIAL_ATTACK, POKEMON_SPECIAL_DEFENSE, POKEMON_DESCRIPTION, POKEMON_TYPES } from '../constants.js'\n\nclass Pokemon extends Component{\n\n    async componentDidMount(){\n        const { pokemonIndex } = this.props.match.params;\n        const url = `https://pokeapi.co/api/v2/pokemon/${pokemonIndex}/`;\n       /* axios.get(url).then((rest) => this.props.onGetPokemon( rest.data ))*/\n\n        const specialUrl = `https://pokeapi.co/api/v2/pokemon-species/${pokemonIndex}/`\n        \n        const rest = await axios.get(url);\n        const special_rest = await axios.get(specialUrl);\n\n        const name = rest.data.name;\n        const imgUrl = rest.data.sprites.front_default;\n\n       let {\n            hp,\n            attack,\n            defense,\n            speed,\n            specialAttack,\n            specialDefense,\n            description\n        } = '';\n\n        rest.data.stats.map(stat => {\n            switch (stat.stat.name) {\n                case 'hp':\n                    hp = stat.base_stat;\n                    break;\n                case 'attack':\n                    attack = stat.base_stat;\n                    break;\n                case 'defense':\n                    defense = stat.base_stat;\n                    break;\n                case 'speed':\n                    speed = stat.base_stat;\n                    break;\n                case 'special-attack':\n                    specialAttack = stat.base_stat;\n                    break;\n                case 'special-defense':\n                    specialDefense = stat.base_stat;\n                    break;\n            }\n        })\n\n        special_rest.data.flavor_text_entries.map(flavor =>{\n            if(flavor.language.name === 'en' ){\n                description = flavor.flavor_text;\n            }\n        });\n\n        const types = rest.data.types.map(type =>\n            type.type.name\n        );\n      \n        store.dispatch((dispatch) => {\n            dispatch({\n                type: POKEMON_NAME,\n                payload: name\n            });\n            dispatch({\n                type: POKEMON_IMG_URL,\n                payload: imgUrl\n            });\n            dispatch({\n                type: POKEMON_HP,\n                payload: hp\n            });\n            dispatch({\n                type: POKEMON_ATTACK,\n                payload: attack\n            });\n            dispatch({\n                type: POKEMON_DEFENSE,\n                payload: defense\n            });\n            dispatch({\n                type: POKEMON_SPEED,\n                payload: speed\n            });\n            dispatch({\n                type: POKEMON_SPECIAL_ATTACK,\n                payload: specialAttack\n            });\n            dispatch({\n                type: POKEMON_SPECIAL_DEFENSE,\n                payload: specialDefense\n            });\n            dispatch({\n                type: POKEMON_DESCRIPTION,\n                payload: description\n            });\n            dispatch({\n                type: POKEMON_TYPES,\n                payload: types\n            });\n        });\n    }\n    \n    render(){\n        const { name, imgUrl, hp, attack, defense, speed, specialAttack, specialDefense, description,\n            types } = this.props;\n        \n        return (\n            <div className='wrapper' >\n                <div className='card-pokemon' >\n                    <div className='card-pokemon-header' >\n                        <div className='card-pokemon-header-index' >\n                              {this.props.match.params.pokemonIndex}\n                        </div>\n                        <div className='card-pokemon-header-types' >\n                                {types.map(type =>\n                                <div key={type} className='types-div' >\n                                    {type.charAt(0).toUpperCase() + type.substr(1)}\n                                </div>\n                                )}\n                        </div>\n                        </div>\n                    <div className='card-pokemon-body' > \n                        <div className='card-pokemon-name' >\n                            {name.charAt(0).toUpperCase() + name.substr(1)}\n                        </div>  \n                        <div className='card-pokemon-name-progress-img' >\n                            <div className='card-pokemon-img-charac' >\n                                <img className='img' src={imgUrl} />\n                            </div>\n                            <div className='card-characristic-name' >\n                                <p className='card-p' >HP</p>\n                                <p className='card-p' >Attack</p>\n                                <p className='card-p' >Defense</p>\n                                <p className='card-p' >Speed</p> \n                                <p className='card-p' >Special Attack</p>\n                                <p className='card-p' >Special Defense</p>\n                            </div>\n                            <div className='card-characristic-progress' > \n                                <progress  max='100' value={hp} >\n                                </progress>\n                                <progress  max='100' value={attack} >\n                                </progress>\n                                <progress  max='100' value={defense} >\n                                </progress>\n                                <progress  max='100' value={speed} >\n                                </progress>\n                                <progress  max='100' value={specialAttack} >\n                                </progress>\n                                <progress  max='100' value={specialDefense} >\n                                </progress>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='card-pokemon-footer' >\n                        <p className='card-footer-text' >{description}</p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps (state) {\n    return {\n        name: state.Pokemon.name,\n        imgUrl: state.Pokemon.imgUrl,\n        hp: state.Pokemon.hp,\n        attack: state.Pokemon.attack,\n        defense: state.Pokemon.attack,\n        speed: state.Pokemon.attack,\n        specialAttack: state.Pokemon.specialAttack,\n        specialDefense: state.Pokemon.specialDefense,\n        description: state.Pokemon.description,\n        types: state.Pokemon.types\n    };\n}\n\nexport default connect (mapStateToProps)(Pokemon);\n/*export default connect(\n    state => ({\n        pokemon_separate: state.Pokemon.pokemon\n    }),\n    dispatch =>({\n        onGetPokemon: (data) =>{\n            console.log('Pokemon is: ', data);\n            dispatch({\n                type: 'ADD_POKEMON_IND',\n                payload: data\n            })\n        }\n    })\n)(Pokemon)*/","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport PokemonList from './Component/PokemonList'\nimport NavBar from './Layout/NavBar'\nimport Pokemon from './Component/Pokemon'\nimport Filter from './Component/Filter'\n\nclass App extends Component {\n\n  render (){\n    return (\n      <Router>\n      <div>\n      <NavBar />\n      <Filter />\n      <Switch> \n      <Route exact path = \"/\" component = {PokemonList} />\n      <Route path = \"/pokemon/:pokemonIndex\" component={Pokemon} />\n      </Switch> \n       </div>\n       </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './Redux/Store'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store} >\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}